import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "com.vdopiaadsdemo"
        minSdkVersion 17
        targetSdkVersion PROP_TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "x86", "armeabi", "mips"
        }
        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    targets 'MyGame'
                    arguments 'NDK_TOOLCHAIN_VERSION=4.9'
                    arguments 'APP_PLATFORM=android-' + PROP_TARGET_SDK_VERSION

                    def module_paths = [project.file("../../cocos2d").absolutePath,
                                        project.file("../../cocos2d/cocos").absolutePath,
                                        project.file("../../cocos2d/external").absolutePath]
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        //should use '/'
                        module_paths = module_paths.collect { it.replaceAll('\\\\', '/') }
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    } else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }

                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(PROP_APP_ABI.split(':').collect { it as String })
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "../../Resources"
    }

    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "jni/Android.mk"
            }
        }
    }

    signingConfigs {

        release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }
        }

        debug {
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
        }
    }
    repositories {
        maven { url 'https://jitpack.io' }
        maven { url "https://adcolony.bintray.com/AdColony" }
        maven { url "https://dl.bintray.com/vdopiacorp/sdk" }
        maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
        maven { url 'https://tapjoy.bintray.com/maven' }
        // If you're using a version of Gradle greater than or equal to 4.1, you must use:
        google()

        // If you're using a version of Gradle lower than 4.1, you must use:
        maven { url 'https://maven.google.com' }

        flatDir {
            dirs 'libs'
        }
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':libcocos2dx')

    //If your application is COCOS-2DX, uncomment the following line
    implementation("com.vdopia.ads.lw:cocos2dx-plugin:1.0.5")
    implementation 'com.vdopia.ads.lw:coresdk:2.8.4'
    implementation 'com.vdopia.ads.lw:adcolony-adapter:3.3.10'
    implementation 'com.adcolony:sdk:3.3.10'
    implementation 'com.vdopia.ads.lw:amazon-adapter:1.0.2'
    implementation 'com.amazon.android:mobile-ads:5.+'
    implementation 'com.vdopia.ads.lw:applovin-adapter:9.4.2'
    implementation 'com.applovin:applovin-sdk:9.4.2'
    implementation 'com.vdopia.ads.lw:criteo-adapter:1.5.5.a'
    implementation 'com.vdopia.ads.lw:facebook-adapter:1.0.6'
    implementation('com.facebook.android:audience-network-sdk:4.99.3') {
        exclude group: 'com.google.android.exoplayer'
    }
    implementation 'com.vdopia.ads.lw:google-adapter:16.0.0.a'
    implementation "com.google.android.gms:play-services-ads:16.0.0"
    //11.0.4 minimum is required, 16.0.0 or newer recommended!
    implementation 'com.google.android.ads.consent:consent-library:1.0.7'
    implementation 'com.vdopia.ads.lw:mopub-adapter:5.6.0'
    implementation('com.mopub:mopub-sdk:5.6.0@aar') { transitive = true }
    implementation 'com.vdopia.ads.lw:tapjoy-adapter:12.2.1'
    implementation 'com.tapjoy:tapjoy-android-sdk:12.2.1@aar'
    implementation 'com.vdopia.ads.lw:unity-adapter:3.0.3'  //don't use 3.0.3.a unless Unity game
    implementation 'com.vdopia.ads.lw:vungle-adapter:6.3.24'
    implementation 'com.github.vungle:vungle-android-sdk:6.3.24'
    implementation 'com.vdopia.ads.lw:yahoo-adapter:1.0.8'
    implementation 'com.flurry.android:ads:10.0.0'
    implementation 'com.vdopia.ads.lw:video-player:4.3.2'
    implementation 'com.devbrackets.android:exomedia:4.3.0'

//Note: if you are using Pre-roll, un-comment the following line:
//implementation 'com.google.ads.interactivemedia.v3:interactivemedia:3.7.4'

//You do not have to use support library version 27.1.1, however, whichever version you do use
//must be the same throughout this gradle file.  This does not apply to multidex.
//Do not use '+' wildcards in the android support library version.
    implementation "com.android.support:support-annotations:27.1.1"
    implementation "com.android.support:appcompat-v7:27.1.1"
    implementation "com.android.support:support-v4:27.1.1"
    implementation "com.android.support:recyclerview-v7:27.1.1"
    implementation 'com.android.support:multidex:1.0.3'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                //You can use your own preferred version of Android Support Library
                details.useVersion('27.1.1')
            }
        }
    }
}
